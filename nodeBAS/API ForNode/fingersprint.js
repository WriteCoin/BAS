const get_fingersprint_functions = (f) => {
	/**
* Получить отпечаток (BAS-функция)
*
* Получить отпечаток браузера, который содержит: юзер агент, размер экрана, свойства navigator, шрифты и многое другое.
* По завершении выполнения этого действия переменная VAR_FINGERPRINT будет содержать все данные, необходимые для изменения отпечатка. Они могут быть использованы как сразу, вместе с действием 'Применить отпечаток', так и в любое другое время, даже после перезапуска BAS. Для этого сохраните их в текстовый файл или базу данных и загрузите перед использованием.
* Это действие - более продвинутая версия смены юзер агента. Оно меняет не только юзер агент, но и множество внутренних методов и переменных браузера, так, что он выглядел абсолютно идентично хрому, файерфоксу, сафари, настольному или мобильному браузеру.
* Некоторые дополнительные действия могут быть использованы, чтобы сделать ваш браузер более защищенным. Задайте прокси сервер через действие 'Прокси'. Измените часовой пояс с помощью действия 'Установить часовой пояс и координаты по ип'. Используйте, сохраняйте и повторно используйте профили, потому что запуск браузера на только что созданных профилях может быть подозрительным.
* Отпечатки загружаются из сервиса FingerprintSwitcher https://fingerprints.bablosoft.com/, чтобы его использовать вам необходимо купить ключ https://fingerprints.bablosoft.com/.
* Тем не менее, вы можете бесплатно получать отпечатки с тегами Microsoft Windows,Chrome и с ограничениями на количество запросов. Чтобы использовать бесплатную версию, оставьте поле 'Ключ сервиса' пустым.
* Сервис FingerprintSwitcher извлекает данные из реальных браузеров на реальных устройствах, поэтому вы можете быть уверены, что отпечатки всегда актуальные, они содержат новые юзер агенты, версии плагинов и т. д.
* Применение отпечатка не требует перезапуск браузера, поэтому настройки не сбрасываются.
* По умолчанию FingerprintSwitcher добавляет шум в данные canvas. Если вы хотите получить более точные результаты, используйте технологию PerfectCanvas. Она позволяет получать данные canvas из реального устройства, а затем заменяет результаты получения отпечатков canvas в вашем браузере. Для использования этой технологии, необходима подготовка. Необходимо заполнить поле "Запрос PerfectCanvas". Данные для этого поля могут быть получены с помощью приложения CanvasInspector. Это бесплатное и простое в использовании и установке приложение, которое позволяет получить запрос PerfectCanvas для сайта, с которым вы работаете. Более подробную информацию и ссылку для скачивания можно найти здесь https://wiki.bablosoft.com/doku.php?id=ru:perfectcanvas#%D0%BA%D0%B0%D0%BA_%D0%BF%D0%BE%D0%BB%D1%83%D1%87%D0%B8%D1%82%D1%8C_%D0%B7%D0%B0%D0%BF%D1%80%D0%BE%D1%81_perfectcanvas
* Чтобы заменить отпечаток с использованием PerfectCanvas, достаточно вызвать это действие с заполненым параметром "Запрос PerfectCanvas", а затем использовать этот отпечаток вызвав действие "Применить отпечаток".
* "Запрос PerfectCanvas" должен быть получен один раз для сайта, а не для каждого отпечатка.
* Если вы оставите поле "Запрос PerfectCanvas" пустым, это действие вернет стандартный отпечаток с подменой canvas с помощью добавления шума.
* Получение отпечатка с помощью PerfectCanvas может занять некоторое время в зависимости от длины очереди запросов и используемой комбинации тегов. Если вы используете комбинацию тегов, которые встречаются редко, это может привести к медленной работе этого действия. Используйте * в качестве значения для поля "Теги", чтобы ускорить процесс. Получение отпечатка для популярного сервиса также может быть медленным.
* Получение отпечатка с помощью PerfectCanvas может выполняться только в одном потоке, вы можете использовать несколько потоков, но остальные потоки будут ожидать, а работать будет только один.
* Если поле "Запрос PerfectCanvas", было подготовленно для "сайта A", и вы посещаете "сайт Б", то данные canvas для "сайта Б" будут заменены с помощью добавления шума. Если вы хотите, чтобы данные canvas заменялись для обоих сайтов, необходимо подготовить запрос как для "сайта A", так и для "сайта Б".
* Чтобы проверить, действительно ли данные для PerfectCanvas были заменены, проверьте лог в файле BrowserAutomationStudio/apps/ТЕКУЩАЯ_ВЕРСИЯ_BAS/s/ID_ПРОЦЕССА.txt.
* Вы можете найти дополнительную информацию и получить тестовые отпечатки на следующей странице FingerprintSwitcher https://fingerprints.bablosoft.com/.
*
* Параметры:
*
* tags: string - Теги
* Выберите систему и устройство, для которых вы хотите получить отпечаток. Несколько параметров могут быть объединены вместе, в этом случае сервис вернет только те отпечатки, которые соответствуют всем параметрам.
Примеры :
Chrome - Выберать отпечаток Chrome для любой платформы
Microsoft Windows,Chrome - Выбрать отпечаток Chrome для Windows. Это единственный тип отпечатков, который можно использовать бесплатно.
Пустая строка - Выбрать любой отпечаток
* key: string - Ключ сервиса. Может быть пустым
Отпечатки загружаются удаленно из службы FingerprintSwitcher, чтобы использовать этот сервис, вам нужно купить ключ (см. ссылку ниже). Однако вы можете использовать его бесплатно с тегами Microsoft Windows,Chrome и с ограничениями на количество запросов. Чтобы использовать бесплатную версию, оставьте это поле пустым.
Примеры :
pGGeNdza2e0gIw48oa - Пример ключа
Пустая строка - Использовать бесплатную версию
* min_browser_version: string - Минимальная версия браузера
Выбирать только те отпечатки, которые имеют определенную версию браузера. Рекомендуется использовать эту опцию вместе с явным указанием названия браузера. Например, вы можете выбрать отпечатки для браузера Chrome с версией не меньше 75.
Примеры :
* - Не фильтровать по версии браузера
75 - Версия браузера должна быть не меньше 75
* min_width: string - Минимальная ширина браузера
Минимальная ширина браузера
Выбирать только те отпечатки, ширина которых больше заданного значения.
Примеры :
* - Не фильтровать по ширине браузера
1600 - Ширина браузера должна быть больше 1600
* min_height: string - Минимальная высота браузера
Минимальная высота браузера
Выбирать только те отпечатки, высота которых больше заданного значения.
Примеры :
* - Не фильтровать по высоте браузера
900 - Высота браузера должна быть больше 900
* max_width: string - Максимальная ширина браузера
Максимальная ширина браузера
Выбирать только те отпечатки, ширина которых меньше заданного значения.
Примеры :
* - Не фильтровать по ширине браузера
2000 - Ширина браузера должна быть меньше 2000
* max_height: string - Максимальная высота браузера
Максимальная высота браузера
Выбирать только те отпечатки, высота которых меньше заданного значения.
Примеры :
* - Не фильтровать по высоте браузера
1200 - Высота браузера должна быть меньше 1200
* time_limit: string - Минимальная дата добавления
Минимальная дата добавления
Выбирать только те отпечатки, дата добавления которых соответствует определенному условию
Примеры :
* - Не фильтровать по дате добавления
15 days - Выбирать только те отпечатки, которые были добавлены не позже 15 дней назад
* perfectcanvas_request: string - Запрос PerfectCanvas. Может быть пустым.
Запрос PerfectCanvas содержит все данные, необходимые для отрисовки canvas на удаленной машине. Чтобы получить строку запроса, используйте приложение CanvasInspector, смотрите вики для получения дополнительной информации и ссылки для скачивания. "Запрос PerfectCanvas" должен быть получен один раз для сайта, а не для каждого отпечатка.
Примеры :
Пустая строка - Использовать стандартный отпечаток. К данным canvas будет добавлен шум.
Запрос PerfectCanvas - Использовать отпечаток с PerfectCanvas. Все данные, соответствующие запросу PerfectCanvas, будут заменены изображениями с реальных устройств. Любые другие данные canvas будут заменены добавлением шума.
*
* perfectcanvas_logs: boolean - PerfectCanvas логи
Нужно ли добавлять логи при получении отпечатков с PerfectCanvas.
Примеры :
true - Добавить логи, может быть полезно для диагностики.
false - Отключить логи, отпечаток будет получен без каких-либо сообщений.
* enable_custom_server: boolean - Использовать пользовательские серверы
Использовать пользовательские серверы
Эта настройка полезна только в том случае, если пользовательские серверы активированы для вашей учетной записи. В противном случае действие всегда будет выдавать ошибку. Если у вас включен этот параметр, отпечаток будет получен только из вашего сервера. Данный метод совместим с PerfectCanvas. Проверьте вики для получения дополнительной информации.
Примеры :
true - Использовать пользовательский сервер для получения отпечатка.
false - Получить отпечаток из стандартного сервера.
* dynamic_perfect_canvas: boolean - Получение PerfectCanvas в реальном времени
В случае, если отпечаток с заданным запросом PerfectCanvas отсутствует в базе, данные canvas будут получаться в реальном времени с одной из машин, которая в данный момент находится online. Так действие работает по умолчанию, но вам также может понадобиться отключить получение PerfetCanvas в реальном времени, например, чтобы сэкономить время или по какой-либо другой причине. Для этого установите значение false. Эта настройка не действуют, если не задан запрос PerfectCanvas.
Примеры :
true - Поиск отпечатка с указанным запросом PerfectCanvas будет происходить в статической базе данных, если он не найден, данные canvas будут получаться в реальном времени с одной из машин, которая в данный момент находится online.
false - Поиск отпечатка с указанным запросом PerfectCanvas будет происходить в статической базе данных, если он не найден, произойдет ошибка.
*
* enable_precomputed_fingerprints: boolean - Включить предварительное вычисление PerfectCanvas
В случае, если отпечаток с заданным запросом PerfectCanvas отсутствует в базе, данные canvas будут получаться в реальном времени с одной из машин, которая в данный момент находится online. Так действие работает по умолчанию, но вам также может понадобиться отключить получение PerfetCanvas из статичной базы и сразу получать отпечаток в реальном времени. Для этого установите значение false. Эта настройка не действуют, если не задан запрос PerfectCanvas или если используется CustomServers.
Примеры :
true - Поиск отпечатка с указанным запросом PerfectCanvas будет происходить в статической базе данных, если он не найден, данные canvas будут получаться в реальном времени с одной из машин, которая в данный момент находится online.
false - Получение отпечатка с указанным запросом PerfectCanvas будет происходить в реальном времени с одной из машин, которая в данный момент находится online.
*
*/
const BAS_get_fingerprint = async (params) => await f("BAS_get_fingerprint", params || {})

	/**
* Применить отпечаток (BAS-функция)
* Изменить отпечаток браузера, который содержит: юзер агент, размер экрана, свойства navigator, шрифты и многое другое.
* Параметр 'Отпечаток' должен содержать данные, необходимые для изменения отпечатка. Их можно получить как результат действия 'Получить отпечаток'. Обратите внимание, что отпечаток может быть использован как сразу, так и в любое другое время, даже после перезапуска BAS. Для этого сохраните его в текстовый файл или базу данных и загрузите перед использованием.
* Это действие - более продвинутая версия смены юзер агента. Оно меняет не только юзер агент, но и множество внутренних методов и переменных браузера, так, что он выглядел абсолютно идентично хрому, файерфоксу, сафари, настольному или мобильному браузеру.
* Некоторые дополнительные действия могут быть использованы, чтобы сделать ваш браузер более защищенным. Задайте прокси сервер через действие 'Прокси'. Измените часовой пояс с помощью действия 'Установить часовой пояс и координаты по ип'. Используйте, сохраняйте и повторно используйте профили, потому что запуск браузера на только что созданных профилях может быть подозрительным.
* Применение отпечатка не требует перезапуск браузера, поэтому настройки не сбрасываются.
* Вы можете найти дополнительную информацию и получить тестовые отпечатки на следующей странице FingerprintSwitcher https://fingerprints.bablosoft.com/.
*
* Параметры:
*
* args.fingerprint: string - Отпечаток
*
Этот параметр должен содержать данные, необходимые для изменения отпечатка. Их можно получить как результат действия 'Получить отпечаток'. Обратите внимание, что отпечаток может быть использован как сразу, так и в любое другое время, даже после перезапуска BAS. Для этого сохраните его в текстовый файл или базу данных и загрузите перед использованием.
* args.safeUseCanvas: boolean - Безопасное использование Canvas
Если в этом поле установлено значение true, получение данных из canvas будет включено, но к этим данным будет добавлен шум.
* args.safeUsePerfectCanvas: boolean - Использовать PerfectCanvas
Если в этом поле установлено значение true, замена данных PerfectCanvas будет включена. Чтобы это работало, отпечаток должен содержать данные PerfectCanvas. Смотрите действие "Получить отпечаток" чтобы узнать больше.
* args.safeUseWebGL: boolean - Безопасное использование WebGL
Если в этом поле установлено значение true, WebGL будет включен, шум будет добавлен к изображениям получаемым из элементов отображаемым с помощью WebGL, а ваши реальные свойства видеокарты будут изменены
* args.safeUseAudio: boolean - Безопасное использование Audio
Если в этом поле установлено значение true, audio api будет включен, шум будет добавлен к звуку, а ваши реальные свойства железа будут изменены
* args.safeUseBattery: boolean - Безопасное использование батареи
Если в этом поле установлено значение true, заряд батареи будет показывать разные значения для каждого потока, что предотвращает обнаружение вас сайтом. В случае, если устройство, из которого был получен отпечаток, не имеет API для работы с батареей, всегда будет возвращен уровень заряда 100%.
* args.safeUseClientRect: boolean - Безопасное использование ClientRect
Если в этом поле установлено значение true, результаты API, который возвращают координаты элемента, будут изменены для защиты от техники получения отпечатков браузера 'ClientRect'.
* args.emulationDeviceSensors: boolean - Эмуляция датчиков устройства
Chrome поддерживает считывание данных из датчиков устройства, таких как акселерометр, гироскоп или другие. Данные с этих устройств доступны только на мобильных платформах. После установки данной настройки, данные для этих устройств будут сгенерированы и заменены автоматически. Включите эту опцию для более точной эмуляции мобильных отпечатков.
*/
const BAS_apply_fingerprint = async (params) => await f("BAS_apply_fingerprint", params || {})

	/**
* Отпечаток производительности (BAS-функция)
* Изменить отпечаток производительности.
* Это действие позволяет снизить эффективность методики получения отпечатка, основанной на измерении времени выполнения определенного javascript функционала. Например, сайт может измерять время выполнения некоторых криптографических функций, которые зависят от используемого оборудования. Результаты будут одинаковыми при разных запусках тестов и, следовательно, могут быть использованы для получения отпечатков.
* Данное действие изменит результаты измерений времени. Величина этих изменений может быть установлена с помощью параметров "Деформация времени от" и "Время деформации до".
* Значения по умолчанию должны давать хорошие результаты и могут быть использованы без изменений.
* Для сброса значений установите параметры "Деформация времени от" и "Время деформации до" в 1.0.
* Эта технология все еще экспериментальна и может привести к непредсказуемым результатам.
* Все значения будут сохранены в текущем профиле и будут автоматически восстановлены при следующем использовании профиля.
* При использовании параметра "Отключить высокую точность замеров" точность измерения времени будет уменьшена. Этот подход снизит возможность получения отпечатка, но может казаться подозрительным. Смотрите описание параметров для более подробной информации.
*
* Параметры:
*
* args.time_deformation_from: number - Деформация времени от
Определяет, насколько сильно будут изменены результаты измерения времени. Большие значения означают, что сайт будет считать, что выполнение кода займет больше времени, чем на самом деле. Значения, близкие к 0.0, создадут ощущение, что код выполняется быстрее. Например, если коэффициент деформации времени равен 1.1, а выполнение конкретного кода занимает 10 мс, сайт будет считать, что код был выполнен за 11 мс. Значения не может быть меньше нуля. Этот параметр работает только вместе с другим параметром "Деформация времени до".
Примеры :
1.0 - 1.2 - Коэффициент деформации времени будет выбираться случайным образом между 1.0 и 1.2. Измерения времени выполнения кода покажут более высокие значения, чем есть на самом деле.
0.8 - 1.0 - Коэффициент деформации времени будет выбираться случайным образом между 0.8 и 1.0. Измерения времени выполнения кода покажут более низкие значения, чем есть на самом деле.
1.15 - 1.15 - Установить коэффициент деформации в точное значение.
1.0 - 1.0 - Деформация времени не будет применена.
* args.time_deformation_to: number - Деформация времени до
Определяет, насколько сильно будут изменены результаты измерения времени. Большие значения означают, что сайт будет считать, что выполнение кода займет больше времени, чем на самом деле. Значения, близкие к 0.0, создадут ощущение, что код выполняется быстрее. Например, если коэффициент деформации времени равен 1.1, а выполнение конкретного кода занимает 10 мс, сайт будет считать, что код был выполнен за 11 мс. Значения не может быть меньше нуля. Этот параметр работает только вместе с другим параметром "Деформация времени от".
Примеры :
1.0 - 1.2 - Коэффициент деформации времени будет выбираться случайным образом между 1.0 и 1.2. Измерения времени выполнения кода покажут более высокие значения, чем есть на самом деле.
0.8 - 1.0 - Коэффициент деформации времени будет выбираться случайным образом между 0.8 и 1.0. Измерения времени выполнения кода покажут более низкие значения, чем есть на самом деле.
1.15 - 1.15 - Установить коэффициент деформации в точное значение.
1.0 - 1.0 - Деформация времени не будет применена.
* args.max_measurement_time: number - Максимальное время измерений
Это действие будет пытаться изменить результаты измерения времени только тогда, когда они выполняются в пределах небольшого временного интервала. Если интервал между измерениями большой, он не может быть использован для получения отпечатков браузера, поэтому замена не требуется. Этот параметр задает максимальное время между измерениями при котором состоится замена.
Примеры :
100 - Значение по умолчанию, делать замену только если интервал между измерениями меньше 100 миллисекунд.
100000 - Выполнять замену всегда.
* args.disable_performance_precision: boolean - Отключить высокую точность замеров
По умолчанию измерение времени вернет значение с высокой точностью, она может быть больше 1 миллисекунды. Например, значение 1200.695 означает 1 секунду и 200.695 миллисекунд. Это может быть использовано для получения отпечатка браузера, но вы можете ограничить точность результата до 1 миллисекунды с помощью этого параметра. Это означает, что возвращаемое значение будет 1200.0 вместо 1200.695. Этот подход снизит возможность получения отпечатка, но может казаться подозрительным, поэтому вместо него лучше использовать деформацию временни.
Примеры :
false - Значение по умолчанию, разрешить высокую точность.
true - Отключить высокую точность.
*/
const BAS_fingerprint_performance = async (params) => await f("BAS_fingerprint_performance", params || {})

return {	BAS_get_fingerprint,
	BAS_apply_fingerprint,
	BAS_fingerprint_performance,
}
}

module.exports = get_fingersprint_functions