;function BAS_create_resource(; name,; successes,; fails,; simultaneous,; interval,; greedy,; dont_give_up;) {; RCreate(name, successes, fails, simultaneous, interval, greedy, dont_give_up);};;;function BAS_delete_resource(name, instantly) {; if (name in _R && _R[name]) {; _R[name].die(); _R[name] = null; }; if (instantly) RSync(name);};;;function BAS_resource_add(name, data, onlyAdd, instantly) {; RInsert(name, data, onlyAdd); if (instantly) RSync(name);};;;function BAS_get_resource_location(name) {; return RInfo(name, "Location");};;;function BAS_resource_as_list(name) {; return RPick(name);};;;function BAS_list_to_resource(name, list) {; RClear(name); RSync(name); for (var i = 0; i < list.length; i++) {; RInsert(name, list[i], false); }; RSync(name);};;;function BAS_reload_resource(name) {; Reload(name);};;;function BAS_resource_length(name) {; return ScriptWorker.GetTotalLength(name);};