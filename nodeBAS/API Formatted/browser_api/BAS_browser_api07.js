function BAS_solveCaptcha() { const dataBase64 = _function_argument("dataBase64"); const method = _function_argument("method"); const key = _function_argument("key"); const serverUrl = _function_argument("serverUrl"); solver_properties_clear(method); BAS_SolveRecaptcha_Serverurl = serverUrl; if (BAS_SolveRecaptcha_Serverurl.length > 0 && BAS_SolveRecaptcha_Serverurl.substr(BAS_SolveRecaptcha_Serverurl.length - 1) != "/") BAS_SolveRecaptcha_Serverurl += "/"; if(method === "rucaptcha") { if(BAS_SolveRecaptcha_Serverurl) solver_property("rucaptcha","serverurl",BAS_SolveRecaptcha_Serverurl); rucaptcha(key); }; if(method === "antigate") { if(BAS_SolveRecaptcha_Serverurl) solver_property("antigate","serverurl",BAS_SolveRecaptcha_Serverurl); antigate(key); }; if(method === "dbc") { if(BAS_SolveRecaptcha_Serverurl) solver_property("dbc","serverurl",BAS_SolveRecaptcha_Serverurl); dbc(key); }; if(method === "2captcha") { if(BAS_SolveRecaptcha_Serverurl) solver_property("2captcha","serverurl",BAS_SolveRecaptcha_Serverurl); twocaptcha(key); }; if(method === "capmonster" || method === "capmonsterimage" || method === "capmonsteraudio") { solver_property("capmonster","serverurl",BAS_SolveRecaptcha_Serverurl); capmonster(key); }; _if_else(method == "captchasniper", function(){ _switch_http_client_internal(); http_client_post(BAS_SolveRecaptcha_Serverurl, ["file","base64://" + dataBase64], {"content-type":("multipart"), "encoding":("UTF-8"), "method":("POST")})!; {const split = http_client_content().split("|");VAR_CAPTCHA_RESULT = split[split.length-1]}; _switch_http_client_main(); }, function(){ solve_base64("manual",dataBase64)!; VAR_CAPTCHA_RESULT = _result(); })!; _function_return(VAR_CAPTCHA_RESULT);};