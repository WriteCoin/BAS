function BAS_input_text() { const args = _arguments(); const selector = args.selector || ""; const text = args.text; const interval = args.interval || 100; const disableEmulation = args.disableEmulation || false; const mouseSettings = args.mouse; const mouseSettingsObj = mouseSettings ? { speed: mouseSettings.speed || 100, gravity: mouseSettings.gravity || 6, deviation: mouseSettings.deviation || 2.5; } : {}; const noWait = args.noWait || false; const stopThread = args.stopThread || true; const wait_full_load = args.wait_full_load || false; const timeout = args.timeout;; _SELECTOR = selector; if (noWait); waiter_timeout_next(1000); if (!stopThread); waiter_nofail_next(); wait_element_visible(_SELECTOR)!; if (disableEmulation) { get_element_selector(_SELECTOR, false).script("self.click()")!; } else { _call(_random_point, {})!; _if(_result().length > 0, function(){ move( mouseSettingsObj )!; if !(!noWait && stopThread) { get_element_selector(_SELECTOR, false).nowait().clarify(X,Y)!; } else { get_element_selector(_SELECTOR, false).clarify(X,Y)!; }; _call(_clarify, mouseSettingsObj )!; mouse(X, Y)!; if (timeout) { general_timeout_next(timeout); }; _type(text, interval)!; })!; }; if (wait_full_load) { if (timeout) waiter_timeout_next(timeout); wait_async_load()!; };};