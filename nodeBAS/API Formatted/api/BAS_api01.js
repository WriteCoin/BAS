function ignore_errors() { const callback = _function_argument("callback") || function() {}; const error_callback = _function_argument("error_callback") || function(err) {}; const error_message_func = _function_argument("error_message_func"); const message_ignore_func = _function_argument("message_ignore_func"); _call(function () { _on_fail(function () { VAR_LAST_ERROR = _result(); VAR_ERROR_ID = ScriptWorker.GetCurrentAction(); VAR_WAS_ERROR = false; _break(1, true); }); CYCLES.Current().RemoveLabel("function"); const message_ignore = message_ignore_func && message_ignore_func(); const message = (message_ignore === null || message_ignore === undefined) ? "Игнорирование ошибок" : message_ignore; log(message); callback()!; }, null)!; _if(VAR_WAS_ERROR,function(){ const error_message = error_message_func && error_message_func(); const message = (error_message === null || error_message === undefined) ? "Произошла ошибка : " + VAR_LAST_ERROR : error_message; log(message); error_callback(err)!; })!;};