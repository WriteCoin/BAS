/**
 * Загрузить (async)
 * Загружает указанный URL в браузере. Примеры: загрузить google.com, загрузить instagram.com.
 *  Если вы столкнулись с ошибками во время выполнения этого действия, попробуйте снять флажок "Ждать полной загрузки страницы" (waiter_timeout_next) или обернуть действие загрузки в блок игнорирования ошибок.
 * @param text Url сайта
 * @param referrer Referrer. Может быть пустым
 * @param is_instant Ждать полной загрузки страницы после этого действия
 * @param callback
 */
declare function _load(
  text: string,
  referrer: string,
  is_instant: boolean,
  callback: Function
): void

/**
 * Максимальное время выполнения задания (следующего действия). Используйте действие 'Таймаут' (функция general_timeout) чтобы установить максимальное время ожидания по умолчанию.
 * @param timeout максимальное время выполнения задания, в миллисекундах (следующего действия)
 */
declare function general_timeout_next(timeout: number): void

/**
 * BAS ограничивает время выполнения каждого действия. Никакое действие не может длиться вечно, кроме сна и ручного решения капчи, но вы можете настроить лимиты.
 * По умолчанию максимальное время решения капчи в неручном режиме составляет 120 секунд и 60 секунд для каждого другого действия.
 * Чтобы изменить максимальное время решения капчи, выполните это действие с типом таймаута "Solver".
 * Чтобы изменить максимальное время решения капчи, выполните это действие с типом таймаута "Solver".
 * BAS позволяет установить таймаут для каждого действия индивидуально, для этого щелкните на значок песочных часов возле кнопки отмены внутри интерфейса конкретного действия.
 * @param timeout Таймаут в миллисекундах
 */
declare function general_timeout(timeout: number): void

/**
 * @param timeout Таймаут в миллисекундах
 */
declare function async_load_timeout(timeout: number): void

/**
 * Изменить максимальное время решения капчи
 * @param timeout Таймаут в миллисекундах
 */
declare function solver_timeout(timeout: number): void

/**
 * Текущий Url (async)
 * Получить текущий url из адресной строки браузера.
 * Получать из функции _result()
 */
declare function url(): void

/**
 * Предыдущая Страница (async)
 * Открыть предыдущий url.
 * Это действие работает так же, как нажатие на кнопку "Назад" в браузере.
 * Если текущая страница загружена первой, это действие загрузит пустую страницу.
 * @param is_instant Ждать полной загрузки страницы (добавлять wait_async_load и waiter_timeout_next соответственно)
 * @param callback Функция
 */
declare function navigate_back(is_instant: boolean, callback: Function): void

/**
 * Ввод текста в элемент с фокусом (async)
 * Если вы хотите ввести текст в определенный элемент, кликните по нему и выберите "Ввод Текста".
 * Это действие может вводить любые символы включая специальные клавиши, такие как enter, backspace, insert, delete и т. д.
 * Если вы хотите ввести большой текст, используйте 0 интервал или действие "Запись В Буфер Обмена" и ввод <CONTROL>V
 * Ctrl = <CONTROL>, Alt = <MENU>, Shift = <SHIFT>, Backspace = <BACK>, tab = <TAB>, Enter = <RETURN>, Escape = <ESCAPE>, Page up = <PRIOR>, Page down = <NEXT>, End = <END>, home = <HOME>, Left = <LEFT>, Up = <UP>, Right = <RIGHT>, Down = <DOWN>, Insert = <INSERT>, Delete = <DELETE>, Mouse wheel up = <MOUSESCROLLUP>, Mouse wheel down = <MOUSESCROLLDOWN>
 * Добавлять wait_async_load()! для полной загрузки страницы после этого действия
 * Добавлять waiter_timeout_next(timeout) для задания максимального времени выполнения этого действия
 * @param text Текст для ввода
 * @param interval Интервал в миллисекундах
 */
declare function _type(text: string, interval: number): void

/**
 * Разрешение (async)
 * Изменяет разрешение браузера. Стандартное значение 1024x600. Если вы хотите получить стандартные разрешения для разных платформ, используйте сервис fingerprint switcher.
 * @param x Ширина
 * @param y Высота
 * @param callback Функция
 */
declare function resize(x: number, y: number, callback: Function): void

/**
 * Получить разрешение и положение курсора (async)
 * Возвращает: Положение курсора X, Положение курсора Y, Положение прокрутки X, Положение прокрутки Y, Ширина бразуера, Высота браузера
 * Получить текущий размер браузера, положение курсора и прокрутки.
 * Чтобы изменить размеры браузера, используйте действие "Разрешение".
 * Чтобы изменить текущее положение прокрутки, используйте действие "Прокрутка".
 * Чтобы изменить текущее положение курсора, используйте действие "Двигать Мышь".
 */
declare function _get_browser_screen_settings(): void